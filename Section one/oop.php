<?Php
//------------------111111111-------------------
//oop:هو اسلوب بساعدك انك ماتكرر الكود مثل 
//dryما اتكرر الكود 
// اقصى اشي اني اعمل فنكشن واستدعيه
//هان اجت 
//oop
// عشان اتنظم الكود عشان لما بدي ارجع لاشي ارجع بسهولة ولما بدي اوخذ اشي اوخذه بسهولة احيانن بكون في شغلات الها علاقة في بعض بحطها 
//الشيء الاساسي هو 
//class :هو عبارة عن تمبليت لجزء معيين مثل تخزين معلومات عن الطالب 
//عشان بس يشوف الطالب يفهم انه اله ميزات كل كلاس في ملف لوحده 
//من الافضل ايكون اسم لكلاس حرف كبير 
//يتكون من شقين 
//الاول لبربرتز 
//properities --> var
//الثاني 
//Methods-->function
//---------------------------
//-----------------------------
//-------------------------------
//---------------------------------
//Magic Function 
//هو عبارة عن مجموعت فنكشن هاذي الفنكشن تعمل لوحدها 

//---------------------
//construct : هوشيء يعمل اول ما اعمل اوبجيكت من لكلاس
//public function __construct(){}
//ممكن استعماله لاستدعاء السيششن او ما اعمل ابجكت من هاذ لكلاس
//او الاتصال في الداتنا بيس 
//destruct  يعمل بعد اخر امر في الابجيكلت 
//ممكن استخدامه  
//اغلاق قاعدة الداتا بيس
//unset session


//-------------222222222222------------------------
/**
 *   encapsulation
 * 1-كل اشي له علاقة في لكلاس في مكان واحد 
 * 
 * 
 * public &&private
 * 
 *  inheritance
 * 
 * 
 * overued: يحدث في الابجيكت اورينتد الابن يورث من الابن بنفس اسم الفنقشن لاكن العمل يختلف 
 * overloade:الفنقشن او الميثود نفس الاسم بختلاف البرميترز 
 * 
 * 
 *  Abstraction : اكلاس لمنع احد ياخذ من ابجيكت 
 * السبب هو الابستراكت ميثود 
 * method abstraction
 * 
 *  interface:عشان يحل مشكلت الملتي انهريتنس 
 *              يكون داخله فقط ممنوع مكاتبة متغيرات ميثود وانتا تجبر 
 *              لكلاس الذي اعطيته 
 *                      implements
 *                  انه ايضيف الميثود 
 * 
 *      ذ           Abstraction VS interface
            * الابستراكت هو كلاس بتقدر تعمله وراثة 
            * الانترفيس مش كلاس ما بقدر اعمله وراثة 
            * الابستراكت 
            * extends
            * الانترفيس 
            * implements
            * الابستراكت بكون في متغيرات 
            * الانرفيس لا ما بكون في 
            * في الانترفيس يكون الميثود 
            * public 
            * عكس الابستراكت الذي يكون حسب ما تريد 
           
           
            * 
 *  
 *  Traites : حلتت 
            * php 
            * من مشكلت الملتي انهرتنس 
             

 * trait A{
 * peivat name
 * public function setname(){
     * 
 * }
 * public function getname(){
     * 
 * }
 * }
 * 
 * trait B{
 * peivat email
 *  * public function setemail(){
     * 
 * }
 * public function getemail(){
     * 
 * }
 * }
 * class C{
 *  use A,B;
 * }
 * $u=new C;
 * $u->setname("..");
 * echo $u->getname();
 * 
 * 
 * 
 * 
 * -------------------------------
 * --------------------
 * ----------
 * static بدون ابجيت من كلالس
من خلال 
اسم لكلاس ثم 
:: 
ثم اسم الفنقشن المعرف 
static 
الفنقشن العادي الغير ممعرف ستاتيك لا يتعرف على فاريبل معرفة ستاتيك الا في عمل 
self::$name
الا في عمل سيييلف 
------------------------
------------------
-------------
final : لكي يمنع اي كلاس يرث منه 
كما انه في حال كال الميثود فاينل وتشابهت الاسماء في الفنقشن في كلالس معول اكستيند غير مسموح التشابه 
ممنوع الافر رايد

const:قيمته ثابة لا يمكن تغييرها 
echo user::$PI;
لا يمكن استخدام 
praivate 
معه .
-----------------------------------
--------------------------------
-------------------------------
------------------------------
----------------------------
-------------------------
-------------------
--------
----
--
Method Chaning 
 */


?>